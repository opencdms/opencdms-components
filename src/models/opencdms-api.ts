/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v1/statistics": {
    get: operations["get_statistics_for_all_climsoft_tables_v1_statistics_get"];
  };
  "/v1/file-upload/image": {
    post: operations["upload_image_v1_file_upload_image_post"];
  };
  "/v1/s3/image/{object_key}": {
    get: operations["get_s3_object_v1_s3_image__object_key__get"];
  };
  "/v1/climsoft-users/": {
    get: operations["get_climsoft_users_v1_climsoft_users__get"];
    post: operations["create_climsoft_user_v1_climsoft_users__post"];
  };
  "/v1/climsoft-users/{username}": {
    get: operations["get_climsoft_user_by_username_v1_climsoft_users__username__get"];
    delete: operations["delete_climsoft_user_v1_climsoft_users__username__delete"];
  };
  "/v1/climsoft-users/{username}/update-role/{role}": {
    put: operations["update_climsoft_user_v1_climsoft_users__username__update_role__role__put"];
  };
  "/v1/acquisition-types/": {
    get: operations["get_acquisition_types_v1_acquisition_types__get"];
    post: operations["create_acquisition_type_v1_acquisition_types__post"];
  };
  "/v1/acquisition-types/{code}": {
    get: operations["get_acquisition_type_by_id_v1_acquisition_types__code__get"];
    put: operations["update_acquisition_type_v1_acquisition_types__code__put"];
    delete: operations["delete_acquisition_type_v1_acquisition_types__code__delete"];
  };
  "/v1/data-forms/": {
    get: operations["get_data_forms_v1_data_forms__get"];
    post: operations["create_data_form_v1_data_forms__post"];
  };
  "/v1/data-forms/{form_name}": {
    get: operations["get_data_form_by_id_v1_data_forms__form_name__get"];
    put: operations["update_data_form_v1_data_forms__form_name__put"];
    delete: operations["delete_data_form_v1_data_forms__form_name__delete"];
  };
  "/v1/fault-resolutions/": {
    get: operations["get_instrument_inspection_v1_fault_resolutions__get"];
    post: operations["create_instrument_inspection_v1_fault_resolutions__post"];
  };
  "/v1/fault-resolutions/{resolved_datetime}/{associated_with}": {
    get: operations["get_instrument_inspection_by_id_v1_fault_resolutions__resolved_datetime___associated_with__get"];
    put: operations["update_instrument_inspection_v1_fault_resolutions__resolved_datetime___associated_with__put"];
    delete: operations["delete_instrument_inspection_v1_fault_resolutions__resolved_datetime___associated_with__delete"];
  };
  "/v1/feature-geographical-positions/": {
    get: operations["get_feature_geographical_positions_v1_feature_geographical_positions__get"];
    post: operations["create_feature_geographical_position_v1_feature_geographical_positions__post"];
  };
  "/v1/feature-geographical-positions/{belongs_to}": {
    get: operations["get_feature_geographical_position_by_id_v1_feature_geographical_positions__belongs_to__get"];
    put: operations["update_feature_geographical_position_v1_feature_geographical_positions__belongs_to__put"];
    delete: operations["delete_feature_geographical_position_v1_feature_geographical_positions__belongs_to__delete"];
  };
  "/v1/flags/": {
    get: operations["get_flags_v1_flags__get"];
    post: operations["create_flag_v1_flags__post"];
  };
  "/v1/flags/{character_symbol}": {
    get: operations["get_flag_by_id_v1_flags__character_symbol__get"];
    put: operations["update_flag_v1_flags__character_symbol__put"];
    delete: operations["delete_flag_v1_flags__character_symbol__delete"];
  };
  "/v1/instruments/": {
    get: operations["get_instruments_v1_instruments__get"];
    post: operations["create_instrument_v1_instruments__post"];
  };
  "/v1/instruments/{instrument_id}": {
    get: operations["get_instrument_by_id_v1_instruments__instrument_id__get"];
    put: operations["update_instrument_v1_instruments__instrument_id__put"];
    delete: operations["delete_instrument_v1_instruments__instrument_id__delete"];
  };
  "/v1/instrument-fault-reports/": {
    get: operations["get_instrument_fault_report_v1_instrument_fault_reports__get"];
    post: operations["create_instrument_fault_report_v1_instrument_fault_reports__post"];
  };
  "/v1/instrument-fault-reports/{report_id}": {
    get: operations["get_instrument_fault_report_by_id_v1_instrument_fault_reports__report_id__get"];
    put: operations["update_instrument_fault_report_v1_instrument_fault_reports__report_id__put"];
    delete: operations["delete_instrument_fault_report_v1_instrument_fault_reports__report_id__delete"];
  };
  "/v1/instrument-inspections/": {
    get: operations["get_instrument_inspection_v1_instrument_inspections__get"];
    post: operations["create_instrument_inspection_v1_instrument_inspections__post"];
  };
  "/v1/instrument-inspections/{performed_on}/{inspection_datetime}": {
    get: operations["get_instrument_inspection_by_id_v1_instrument_inspections__performed_on___inspection_datetime__get"];
    put: operations["update_instrument_inspection_v1_instrument_inspections__performed_on___inspection_datetime__put"];
    delete: operations["delete_instrument_inspection_v1_instrument_inspections__performed_on___inspection_datetime__delete"];
  };
  "/v1/obselements/": {
    get: operations["get_obselements_v1_obselements__get"];
    post: operations["create_obs_element_v1_obselements__post"];
  };
  "/v1/obselements/{element_id}": {
    get: operations["get_obs_element_by_id_v1_obselements__element_id__get"];
    put: operations["update_obs_element_v1_obselements__element_id__put"];
    delete: operations["delete_obs_element_v1_obselements__element_id__delete"];
  };
  "/v1/observation-finals/": {
    get: operations["get_observation_finals_v1_observation_finals__get"];
    post: operations["create_observation_final_v1_observation_finals__post"];
  };
  "/v1/observation-finals/{recorded_from}/{described_by}/{obs_datetime}": {
    get: operations["get_observation_final_by_id_v1_observation_finals__recorded_from___described_by___obs_datetime__get"];
    put: operations["update_observation_final_v1_observation_finals__recorded_from___described_by___obs_datetime__put"];
    delete: operations["delete_observation_final_v1_observation_finals__recorded_from___described_by___obs_datetime__delete"];
  };
  "/v1/observation-initials/": {
    get: operations["get_observation_initials_v1_observation_initials__get"];
    post: operations["create_observation_initial_v1_observation_initials__post"];
  };
  "/v1/observation-initials/{recorded_from}/{described_by}/{obs_datetime}/{qc_status}/{acquisition_type}": {
    get: operations["get_observation_initial_by_id_v1_observation_initials__recorded_from___described_by___obs_datetime___qc_status___acquisition_type__get"];
    put: operations["update_observation_initial_v1_observation_initials__recorded_from___described_by___obs_datetime___qc_status___acquisition_type__put"];
    delete: operations["delete_observation_initial_v1_observation_initials__recorded_from___described_by___obs_datetime___qc_status___acquisition_type__delete"];
  };
  "/v1/obs-schedule-class/": {
    get: operations["get_obs_schedule_class_v1_obs_schedule_class__get"];
    post: operations["create_instrument_v1_obs_schedule_class__post"];
  };
  "/v1/obs-schedule-class/{schedule_class}": {
    get: operations["get_instrument_by_id_v1_obs_schedule_class__schedule_class__get"];
    put: operations["update_instrument_v1_obs_schedule_class__schedule_class__put"];
    delete: operations["delete_instrument_v1_obs_schedule_class__schedule_class__delete"];
  };
  "/v1/paper-archives/": {
    get: operations["get_paper_archives_v1_paper_archives__get"];
    post: operations["create_paper_archive_v1_paper_archives__post"];
  };
  "/v1/paper-archives/{belongs_to}/{form_datetime}/{classified_into}": {
    get: operations["get_paper_archive_by_id_v1_paper_archives__belongs_to___form_datetime___classified_into__get"];
    put: operations["update_paper_archive_v1_paper_archives__belongs_to___form_datetime___classified_into__put"];
    delete: operations["delete_paper_archive_v1_paper_archives__belongs_to___form_datetime___classified_into__delete"];
  };
  "/v1/paper-archive-definitions/": {
    get: operations["get_paper_archive_definitions_v1_paper_archive_definitions__get"];
    post: operations["create_paper_archive_definition_v1_paper_archive_definitions__post"];
  };
  "/v1/paper-archive-definitions/{form_id}": {
    get: operations["get_paper_archive_definition_by_id_v1_paper_archive_definitions__form_id__get"];
    put: operations["update_paper_archive_definition_v1_paper_archive_definitions__form_id__put"];
    delete: operations["delete_paper_archive_definition_v1_paper_archive_definitions__form_id__delete"];
  };
  "/v1/physical-features/": {
    get: operations["get_physical_feature_v1_physical_features__get"];
    post: operations["create_physical_feature_v1_physical_features__post"];
  };
  "/v1/physical-features/{associated_with}/{begin_date}/{classified_into}/{description}": {
    get: operations["get_physical_feature_by_id_v1_physical_features__associated_with___begin_date___classified_into___description__get"];
    put: operations["update_physical_feature_v1_physical_features__associated_with___begin_date___classified_into___description__put"];
    delete: operations["delete_physical_feature_v1_physical_features__associated_with___begin_date___classified_into___description__delete"];
  };
  "/v1/physical-feature-class/": {
    get: operations["get_physical_feature_class_v1_physical_feature_class__get"];
    post: operations["create_physical_feature_class_v1_physical_feature_class__post"];
  };
  "/v1/physical-feature-class/{feature_class}": {
    get: operations["get_physical_feature_class_by_id_v1_physical_feature_class__feature_class__get"];
    put: operations["update_physical_feature_class_v1_physical_feature_class__feature_class__put"];
    delete: operations["delete_physical_feature_class_v1_physical_feature_class__feature_class__delete"];
  };
  "/v1/qc-status-definitions/": {
    get: operations["get_qc_status_definitions_v1_qc_status_definitions__get"];
    post: operations["create_qc_status_definition_v1_qc_status_definitions__post"];
  };
  "/v1/qc-status-definitions/{code}": {
    get: operations["get_qc_status_definition_by_id_v1_qc_status_definitions__code__get"];
    put: operations["update_qc_status_definition_v1_qc_status_definitions__code__put"];
    delete: operations["delete_qc_status_definition_v1_qc_status_definitions__code__delete"];
  };
  "/v1/qc-types/": {
    get: operations["get_qc_types_v1_qc_types__get"];
    post: operations["create_qc_type_v1_qc_types__post"];
  };
  "/v1/qc-types/{code}": {
    get: operations["get_qc_type_by_id_v1_qc_types__code__get"];
    put: operations["update_qc_type_v1_qc_types__code__put"];
    delete: operations["delete_qc_type_v1_qc_types__code__delete"];
  };
  "/v1/reg-keys/": {
    get: operations["get_reg_keys_v1_reg_keys__get"];
    post: operations["create_reg_key_v1_reg_keys__post"];
  };
  "/v1/reg-keys/{key_name}": {
    get: operations["get_reg_key_by_id_v1_reg_keys__key_name__get"];
    put: operations["update_reg_key_v1_reg_keys__key_name__put"];
    delete: operations["delete_reg_key_v1_reg_keys__key_name__delete"];
  };
  "/v1/stations/": {
    get: operations["get_stations_v1_stations__get"];
    post: operations["create_station_v1_stations__post"];
  };
  "/v1/stations/{station_id}": {
    get: operations["get_station_by_id_v1_stations__station_id__get"];
    put: operations["update_station_v1_stations__station_id__put"];
    delete: operations["delete_station_v1_stations__station_id__delete"];
  };
  "/v1/station-elements/": {
    get: operations["get_station_elements_v1_station_elements__get"];
    post: operations["create_station_element_v1_station_elements__post"];
  };
  "/v1/station-elements/{recorded_from}/{described_by}/{recorded_with}/{begin_date}": {
    get: operations["get_station_element_by_id_v1_station_elements__recorded_from___described_by___recorded_with___begin_date__get"];
    put: operations["update_station_element_v1_station_elements__recorded_from___described_by___recorded_with___begin_date__put"];
    delete: operations["delete_station_element_v1_station_elements__recorded_from___described_by___recorded_with___begin_date__delete"];
  };
  "/v1/station-location-histories/": {
    get: operations["get_station_location_history_v1_station_location_histories__get"];
    post: operations["create_station_location_history_v1_station_location_histories__post"];
  };
  "/v1/station-location-histories/{belongs_to}/{opening_datetime}": {
    get: operations["get_station_location_history_by_id_v1_station_location_histories__belongs_to___opening_datetime__get"];
    put: operations["update_station_location_history_v1_station_location_histories__belongs_to___opening_datetime__put"];
    delete: operations["delete_station_location_history_v1_station_location_histories__belongs_to___opening_datetime__delete"];
  };
  "/v1/station-qualifiers/": {
    get: operations["get_station_qualifier_v1_station_qualifiers__get"];
    post: operations["create_station_qualifier_v1_station_qualifiers__post"];
  };
  "/v1/station-qualifiers/{qualifier}/{qualifier_begin_date}/{qualifier_end_date}/{belongs_to}": {
    get: operations["get_station_qualifier_by_id_v1_station_qualifiers__qualifier___qualifier_begin_date___qualifier_end_date___belongs_to__get"];
    put: operations["update_station_qualifier_v1_station_qualifiers__qualifier___qualifier_begin_date___qualifier_end_date___belongs_to__put"];
    delete: operations["delete_station_qualifier_v1_station_qualifiers__qualifier___qualifier_begin_date___qualifier_end_date___belongs_to__delete"];
  };
  "/v1/synop-features/": {
    get: operations["get_qc_types_v1_synop_features__get"];
    post: operations["create_qc_type_v1_synop_features__post"];
  };
  "/v1/synop-features/{abbreviation}": {
    get: operations["get_qc_type_by_id_v1_synop_features__abbreviation__get"];
    put: operations["update_qc_type_v1_synop_features__abbreviation__put"];
    delete: operations["delete_qc_type_v1_synop_features__abbreviation__delete"];
  };
}

export interface components {
  schemas: {
    /** AcquisitionType */
    AcquisitionType: {
      /** Code */
      code: number;
      /** Description */
      description: string;
    };
    /** AcquisitionTypeQueryResponse */
    AcquisitionTypeQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["AcquisitionType"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** AcquisitionTypeResponse */
    AcquisitionTypeResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["AcquisitionType"][];
    };
    /** Body_upload_image_v1_file_upload_image_post */
    Body_upload_image_v1_file_upload_image_post: {
      /**
       * File
       * Format: binary
       */
      file: string;
    };
    /** ClimsoftUser */
    ClimsoftUser: {
      /** Username */
      username: string;
      role: components["schemas"]["ClimsoftUserRole"];
    };
    /** ClimsoftUserQueryResponse */
    ClimsoftUserQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ClimsoftUser"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** ClimsoftUserResponse */
    ClimsoftUserResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ClimsoftUser"][];
    };
    /**
     * ClimsoftUserRole
     * @description An enumeration.
     * @enum {string}
     */
    ClimsoftUserRole:
      | "ClimsoftAdmin"
      | "ClimsoftDeveloper"
      | "ClimsoftMetadata"
      | "ClimsoftOperator"
      | "ClimsoftOperatorSupervisor"
      | "ClimsoftProducts"
      | "ClimsoftQC"
      | "ClimsoftRainfall"
      | "ClimsoftTranslator";
    /** CreateAcquisitionType */
    CreateAcquisitionType: {
      /** Code */
      code: number;
      /** Description */
      description: string;
    };
    /** CreateClimsoftUser */
    CreateClimsoftUser: {
      /** Username */
      username: string;
      /** Role */
      role: string;
    };
    /** CreateDataForm */
    CreateDataForm: {
      /** Form Name */
      form_name: string;
      /** Order Num */
      order_num: number;
      /** Table Name */
      table_name: string;
      /** Description */
      description: string;
      /** Selected */
      selected: boolean;
      /** Val Start Position */
      val_start_position: number;
      /** Val End Position */
      val_end_position: number;
      /** Elem Code Location */
      elem_code_location: string;
      /** Sequencer */
      sequencer: string;
      /** Entry Mode */
      entry_mode: boolean;
    };
    /** CreateFaultResolution */
    CreateFaultResolution: {
      /** Resolved Datetime */
      resolved_datetime: string;
      /** Associated With */
      associated_with: string;
      /** Resolved By */
      resolved_by: string;
      /** Remarks */
      remarks: string;
    };
    /** CreateFeatureGeographicalPosition */
    CreateFeatureGeographicalPosition: {
      /** Belongs To */
      belongs_to: string;
      /** Observed On */
      observed_on: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
    };
    /** CreateFlag */
    CreateFlag: {
      /** Character Symbol */
      character_symbol: string;
      /** Num Symbol */
      num_symbol: number;
      /** Description */
      description: string;
    };
    /** CreateInstrument */
    CreateInstrument: {
      /** Instrument Name */
      instrument_name: string;
      /** Instrument Id */
      instrument_id: string;
      /** Serial Number */
      serial_number: string;
      /** Abbreviation */
      abbreviation: string;
      /** Model */
      model: string;
      /** Manufacturer */
      manufacturer: string;
      /** Instrument Uncertainty */
      instrument_uncertainty: number;
      /** Installation Datetime */
      installation_datetime: string;
      /** Uninstallation Datetime */
      uninstallation_datetime: string;
      /** Height */
      height: string;
      /** Instrument Picture */
      instrument_picture: string;
      /** Installed At */
      installed_at: string;
    };
    /** CreateInstrumentFaultReport */
    CreateInstrumentFaultReport: {
      /** Refers To */
      refers_to: string;
      /** Report Id */
      report_id: number;
      /** Report Datetime */
      report_datetime: string;
      /** Fault Description */
      fault_description: string;
      /** Reported By */
      reported_by: string;
      /** Received Datetime */
      received_datetime: string;
      /** Received By */
      received_by: string;
      /** Reported From */
      reported_from: string;
    };
    /** CreateInstrumentInspection */
    CreateInstrumentInspection: {
      /** Performed On */
      performed_on: string;
      /** Inspection Datetime */
      inspection_datetime: string;
      /** Performed By */
      performed_by: string;
      /** Status */
      status: string;
      /** Remarks */
      remarks: string;
      /** Performed At */
      performed_at: string;
    };
    /** CreateObsElement */
    CreateObsElement: {
      /** Element Id */
      element_id: number;
      /** Abbreviation */
      abbreviation: string;
      /** Element Name */
      element_name: string;
      /** Description */
      description: string;
      /** Element Scale */
      element_scale: number;
      /** Upper Limit */
      upper_limit: string;
      /** Lower Limit */
      lower_limit: string;
      /** Units */
      units: string;
      /** Element Type */
      element_type: string;
      /** Qc Total Required */
      qc_total_required: number;
      /** Selected */
      selected: boolean;
    };
    /** CreateObsScheduleClass */
    CreateObsScheduleClass: {
      /** Schedule Class */
      schedule_class: string;
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
    };
    /** CreateObservationFinal */
    CreateObservationFinal: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by: number;
      /** Obs Datetime */
      obs_datetime: string;
      /** Qc Status */
      qc_status: number;
      /** Acquisition Type */
      acquisition_type: number;
      /** Obs Level */
      obs_level: string;
      /** Obs Value */
      obs_value: string;
      /** Flag */
      flag: string;
      /** Period */
      period?: number;
      /** Qc Type Log */
      qc_type_log?: string;
      /** Data Form */
      data_form?: string;
      /** Captured By */
      captured_by?: string;
      /** Mark */
      mark?: boolean;
      /** Temperature Units */
      temperature_units?: string;
      /** Precipitation Units */
      precipitation_units?: string;
      /** Cloud Height Units */
      cloud_height_units?: string;
      /** Vis Units */
      vis_units?: string;
      /** Data Source Timezone */
      data_source_timezone: number;
    };
    /** CreateObservationInitial */
    CreateObservationInitial: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by: number;
      /** Obs Datetime */
      obs_datetime: string;
      /** Qc Status */
      qc_status: number;
      /** Acquisition Type */
      acquisition_type: number;
      /** Obs Level */
      obs_level: string;
      /** Obsvalue */
      obsValue: string;
      /** Flag */
      flag: string;
      /** Period */
      period: number;
      /** Qc Type Log */
      qc_type_log: string;
      /** Data Form */
      data_form: string;
      /** Captured By */
      captured_by: string;
      /** Mark */
      mark: boolean;
      /** Temperature Units */
      temperature_units: string;
      /** Precipitation Units */
      precipitation_units: string;
      /** Cloud Height Units */
      cloud_height_units: string;
      /** Vis Units */
      vis_units: string;
      /** Data Source Timezone */
      data_source_timezone: number;
    };
    /** CreatePaperArchive */
    CreatePaperArchive: {
      /** Belongs To */
      belongs_to: string;
      /** Form Datetime */
      form_datetime: string;
      /** Image */
      image: string;
      /** Classified Into */
      classified_into: string;
    };
    /** CreatePaperArchiveDefinition */
    CreatePaperArchiveDefinition: {
      /** Form Id */
      form_id: string;
      /** Description */
      description: string;
    };
    /** CreatePhysicalFeature */
    CreatePhysicalFeature: {
      /** Associated With */
      associated_with: string;
      /** Begin Date */
      begin_date: string;
      /** End Date */
      end_date: string;
      /** Image */
      image: string;
      /** Description */
      description: string;
      /** Classified Into */
      classified_into: string;
    };
    /** CreatePhysicalFeatureClass */
    CreatePhysicalFeatureClass: {
      /** Feature Class */
      feature_class: string;
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
    };
    /** CreateQCStatusDefinition */
    CreateQCStatusDefinition: {
      /** Code */
      code: number;
      /** Description */
      description: string;
    };
    /** CreateQCType */
    CreateQCType: {
      /** Code */
      code: number;
      /** Description */
      description: string;
    };
    /** CreateRegKey */
    CreateRegKey: {
      /** Key Name */
      key_name: string;
      /** Key Value */
      key_value: string;
      /** Key Description */
      key_description: string;
    };
    /** CreateStation */
    CreateStation: {
      /** Station Id */
      station_id: string;
      /** Station Name */
      station_name: string;
      /** Wmoid */
      wmoid?: string;
      /** Icaoid */
      icaoid?: string;
      /** Latitude */
      latitude: number;
      /** Qualifier */
      qualifier?: string;
      /** Longitude */
      longitude: number;
      /** Elevation */
      elevation: string;
      /** Geolocation Method */
      geolocation_method?: string;
      /** Geolocation Accuracy */
      geolocation_accuracy?: number;
      /** Opening Datetime */
      opening_datetime?: string;
      /** Closing Datetime */
      closing_datetime: string;
      /** Country */
      country: string;
      /** Authority */
      authority?: string;
      /** Admin Region */
      admin_region?: string;
      /** Drainage Basin */
      drainage_basin?: string;
      /** Waca Selection */
      waca_selection: boolean;
      /** Cpt Selection */
      cpt_selection: boolean;
      /** Station Operational */
      station_operational: boolean;
    };
    /** CreateStationElement */
    CreateStationElement: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by?: number;
      /** Recorded With */
      recorded_with?: string;
      /** Instrument Code */
      instrument_code?: string;
      /** Scheduled For */
      scheduled_for?: string;
      /** Height */
      height?: number;
      /** Begin Date */
      begin_date?: string;
      /** End Date */
      end_date?: string;
    };
    /** CreateStationLocationHistory */
    CreateStationLocationHistory: {
      /** Belongs To */
      belongs_to: string;
      /** Opening Datetime */
      opening_datetime: string;
      /** Station Type */
      station_type: string;
      /** Geolocationmethod */
      geoLocationMethod: string;
      /** Geolocationaccuracy */
      geoLocationAccuracy: number;
      /** Closing Datetime */
      closing_datetime: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
      /** Elevation */
      elevation: number;
      /** Authority */
      authority: string;
      /** Admin Region */
      admin_region: string;
      /** Drainage Basin */
      drainage_basin: string;
    };
    /** CreateStationQualifier */
    CreateStationQualifier: {
      /** Qualifier */
      qualifier: string;
      /** Qualifier Begin Date */
      qualifier_begin_date: string;
      /** Qualifier End Date */
      qualifier_end_date: string;
      /** Belongs To */
      belongs_to: string;
      /** Station Timezone */
      station_timezone: number;
      /** Station Network Type */
      station_network_type: string;
    };
    /** CreateSynopFeature */
    CreateSynopFeature: {
      /** Abbreviation */
      abbreviation: string;
      /** Description */
      description: string;
    };
    /** DataForm */
    DataForm: {
      /** Form Name */
      form_name: string;
      /** Order Num */
      order_num: number;
      /** Table Name */
      table_name: string;
      /** Description */
      description: string;
      /** Selected */
      selected: boolean;
      /** Val Start Position */
      val_start_position: number;
      /** Val End Position */
      val_end_position: number;
      /** Elem Code Location */
      elem_code_location: string;
      /** Sequencer */
      sequencer: string;
      /** Entry Mode */
      entry_mode: boolean;
    };
    /** DataFormQueryResponse */
    DataFormQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["DataForm"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** DataFormResponse */
    DataFormResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["DataForm"][];
    };
    /** FaultResolution */
    FaultResolution: {
      /** Resolved Datetime */
      resolved_datetime: string;
      /** Associated With */
      associated_with: string;
      /** Resolved By */
      resolved_by: string;
      /** Remarks */
      remarks: string;
    };
    /** FaultResolutionQueryResponse */
    FaultResolutionQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FaultResolution"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** FaultResolutionResponse */
    FaultResolutionResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FaultResolution"][];
    };
    /** FaultResolutionWithInstrumentFaultReport */
    FaultResolutionWithInstrumentFaultReport: {
      /** Resolved Datetime */
      resolved_datetime: string;
      /** Associated With */
      associated_with: string;
      /** Resolved By */
      resolved_by: string;
      /** Remarks */
      remarks: string;
      instrumentfaultreport: components["schemas"]["InstrumentFaultReport"];
    };
    /** FaultResolutionWithInstrumentFaultReportResponse */
    FaultResolutionWithInstrumentFaultReportResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FaultResolutionWithInstrumentFaultReport"][];
    };
    /** FeatureGeographicalPosition */
    FeatureGeographicalPosition: {
      /** Belongs To */
      belongs_to: string;
      /** Observed On */
      observed_on: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
    };
    /** FeatureGeographicalPositionQueryResponse */
    FeatureGeographicalPositionQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FeatureGeographicalPosition"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** FeatureGeographicalPositionResponse */
    FeatureGeographicalPositionResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FeatureGeographicalPosition"][];
    };
    /** FeatureGeographicalPositionWithSynopFeature */
    FeatureGeographicalPositionWithSynopFeature: {
      /** Belongs To */
      belongs_to: string;
      /** Observed On */
      observed_on: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
      synopfeature: components["schemas"]["SynopFeature"];
    };
    /** FeatureGeographicalPositionWithSynopFeatureResponse */
    FeatureGeographicalPositionWithSynopFeatureResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FeatureGeographicalPositionWithSynopFeature"][];
    };
    /** FileUploadedToDisk */
    FileUploadedToDisk: {
      /**
       * Storage
       * @default disk
       */
      storage?: string;
      /** Filepath */
      filepath: string;
    };
    /** FileUploadedToDiskResponse */
    FileUploadedToDiskResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FileUploadedToDisk"][];
    };
    /** FileUploadedToS3 */
    FileUploadedToS3: {
      /**
       * Storage
       * @default s3
       */
      storage?: string;
      /** Object Key */
      object_key: string;
    };
    /** FileUploadedToS3Response */
    FileUploadedToS3Response: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["FileUploadedToS3"][];
    };
    /** Flag */
    Flag: {
      /** Character Symbol */
      character_symbol: string;
      /** Num Symbol */
      num_symbol: number;
      /** Description */
      description: string;
    };
    /** FlagQueryResponse */
    FlagQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["Flag"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** FlagResponse */
    FlagResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["Flag"][];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** Instrument */
    Instrument: {
      /** Instrument Name */
      instrument_name: string;
      /** Instrument Id */
      instrument_id: string;
      /** Serial Number */
      serial_number: string;
      /** Abbreviation */
      abbreviation: string;
      /** Model */
      model: string;
      /** Manufacturer */
      manufacturer: string;
      /** Instrument Uncertainty */
      instrument_uncertainty: number;
      /** Installation Datetime */
      installation_datetime: string;
      /** Uninstallation Datetime */
      uninstallation_datetime: string;
      /** Height */
      height: string;
      /** Instrument Picture */
      instrument_picture: string;
      /** Installed At */
      installed_at: string;
    };
    /** InstrumentFaultReport */
    InstrumentFaultReport: {
      /** Refers To */
      refers_to: string;
      /** Report Id */
      report_id: number;
      /**
       * Report Datetime
       * Format: date-time
       */
      report_datetime: string;
      /** Fault Description */
      fault_description: string;
      /** Reported By */
      reported_by: string;
      /**
       * Received Datetime
       * Format: date-time
       */
      received_datetime: string;
      /** Received By */
      received_by: string;
      /** Reported From */
      reported_from: string;
    };
    /** InstrumentFaultReportQueryResponse */
    InstrumentFaultReportQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["InstrumentFaultReport"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** InstrumentFaultReportResponse */
    InstrumentFaultReportResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["InstrumentFaultReport"][];
    };
    /** InstrumentFaultReportWithStationAndInstrument */
    InstrumentFaultReportWithStationAndInstrument: {
      /** Refers To */
      refers_to: string;
      /** Report Id */
      report_id: number;
      /**
       * Report Datetime
       * Format: date-time
       */
      report_datetime: string;
      /** Fault Description */
      fault_description: string;
      /** Reported By */
      reported_by: string;
      /**
       * Received Datetime
       * Format: date-time
       */
      received_datetime: string;
      /** Received By */
      received_by: string;
      /** Reported From */
      reported_from: string;
      station: components["schemas"]["Station"];
      instrument: components["schemas"]["Instrument"];
    };
    /** InstrumentFaultReportWithStationAndInstrumentResponse */
    InstrumentFaultReportWithStationAndInstrumentResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["InstrumentFaultReportWithStationAndInstrument"][];
    };
    /** InstrumentInspection */
    InstrumentInspection: {
      /** Performed On */
      performed_on: string;
      /** Inspection Datetime */
      inspection_datetime: string;
      /** Performed By */
      performed_by: string;
      /** Status */
      status: string;
      /** Remarks */
      remarks: string;
      /** Performed At */
      performed_at: string;
    };
    /** InstrumentInspectionQueryResponse */
    InstrumentInspectionQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["InstrumentInspection"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** InstrumentInspectionResponse */
    InstrumentInspectionResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["InstrumentInspection"][];
    };
    /** InstrumentInspectionWithStationAndInstrument */
    InstrumentInspectionWithStationAndInstrument: {
      /** Performed On */
      performed_on: string;
      /** Inspection Datetime */
      inspection_datetime: string;
      /** Performed By */
      performed_by: string;
      /** Status */
      status: string;
      /** Remarks */
      remarks: string;
      /** Performed At */
      performed_at: string;
      station: components["schemas"]["Station"];
      instrument: components["schemas"]["Instrument"];
    };
    /** InstrumentInspectionWithStationAndInstrumentResponse */
    InstrumentInspectionWithStationAndInstrumentResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["InstrumentInspectionWithStationAndInstrument"][];
    };
    /** InstrumentQueryResponse */
    InstrumentQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["Instrument"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** InstrumentResponse */
    InstrumentResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["Instrument"][];
    };
    /** InstrumentWithStation */
    InstrumentWithStation: {
      /** Instrument Name */
      instrument_name: string;
      /** Instrument Id */
      instrument_id: string;
      /** Serial Number */
      serial_number: string;
      /** Abbreviation */
      abbreviation: string;
      /** Model */
      model: string;
      /** Manufacturer */
      manufacturer: string;
      /** Instrument Uncertainty */
      instrument_uncertainty: number;
      /** Installation Datetime */
      installation_datetime: string;
      /** Uninstallation Datetime */
      uninstallation_datetime: string;
      /** Height */
      height: string;
      /** Instrument Picture */
      instrument_picture: string;
      /** Installed At */
      installed_at: string;
      station: components["schemas"]["Station"];
    };
    /** InstrumentWithStationResponse */
    InstrumentWithStationResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["InstrumentWithStation"][];
    };
    /** ObsElement */
    ObsElement: {
      /** Element Id */
      element_id: number;
      /** Abbreviation */
      abbreviation: string;
      /** Element Name */
      element_name: string;
      /** Description */
      description: string;
      /** Element Scale */
      element_scale: number;
      /** Upper Limit */
      upper_limit: string;
      /** Lower Limit */
      lower_limit: string;
      /** Units */
      units: string;
      /** Element Type */
      element_type: string;
      /** Qc Total Required */
      qc_total_required: number;
      /** Selected */
      selected: boolean;
    };
    /** ObsElementQueryResponse */
    ObsElementQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObsElement"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** ObsElementResponse */
    ObsElementResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObsElement"][];
    };
    /** ObsScheduleClass */
    ObsScheduleClass: {
      /** Schedule Class */
      schedule_class: string;
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
    };
    /** ObsScheduleClassQueryResponse */
    ObsScheduleClassQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObsScheduleClass"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** ObsScheduleClassResponse */
    ObsScheduleClassResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObsScheduleClass"][];
    };
    /** ObsScheduleClassWithStation */
    ObsScheduleClassWithStation: {
      /** Schedule Class */
      schedule_class: string;
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
      station: components["schemas"]["Station"];
    };
    /** ObsScheduleClassWithStationResponse */
    ObsScheduleClassWithStationResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObsScheduleClassWithStation"][];
    };
    /** ObservationFinal */
    ObservationFinal: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by: number;
      /**
       * Obs Datetime
       * Format: date-time
       */
      obs_datetime: string;
      /** Qc Status */
      qc_status: number;
      /** Acquisition Type */
      acquisition_type: number;
      /** Obs Level */
      obs_level: string;
      /** Obs Value */
      obs_value: string;
      /** Flag */
      flag: string;
      /** Period */
      period?: number;
      /** Qc Type Log */
      qc_type_log?: string;
      /** Data Form */
      data_form?: string;
      /** Captured By */
      captured_by?: string;
      /** Mark */
      mark?: boolean;
      /** Temperature Units */
      temperature_units?: string;
      /** Precipitation Units */
      precipitation_units?: string;
      /** Cloud Height Units */
      cloud_height_units?: string;
      /** Vis Units */
      vis_units?: string;
      /** Data Source Timezone */
      data_source_timezone: number;
    };
    /** ObservationFinalQueryResponse */
    ObservationFinalQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObservationFinal"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** ObservationFinalResponse */
    ObservationFinalResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObservationFinal"][];
    };
    /** ObservationFinalWithChildren */
    ObservationFinalWithChildren: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by: number;
      /**
       * Obs Datetime
       * Format: date-time
       */
      obs_datetime: string;
      /** Qc Status */
      qc_status: number;
      /** Acquisition Type */
      acquisition_type: number;
      /** Obs Level */
      obs_level: string;
      /** Obs Value */
      obs_value: string;
      /** Flag */
      flag: string;
      /** Period */
      period?: number;
      /** Qc Type Log */
      qc_type_log?: string;
      /** Data Form */
      data_form?: string;
      /** Captured By */
      captured_by?: string;
      /** Mark */
      mark?: boolean;
      /** Temperature Units */
      temperature_units?: string;
      /** Precipitation Units */
      precipitation_units?: string;
      /** Cloud Height Units */
      cloud_height_units?: string;
      /** Vis Units */
      vis_units?: string;
      /** Data Source Timezone */
      data_source_timezone: number;
      obselement: components["schemas"]["ObsElement"];
      station: components["schemas"]["Station"];
    };
    /** ObservationFinalWithChildrenResponse */
    ObservationFinalWithChildrenResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObservationFinalWithChildren"][];
    };
    /** ObservationInitial */
    ObservationInitial: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by: number;
      /**
       * Obs Datetime
       * Format: date-time
       */
      obs_datetime: string;
      /** Qc Status */
      qc_status: number;
      /** Acquisition Type */
      acquisition_type: number;
      /** Obs Level */
      obs_level: string;
      /** Obsvalue */
      obsValue: string;
      /** Flag */
      flag: string;
      /** Period */
      period: number;
      /** Qc Type Log */
      qc_type_log: string;
      /** Data Form */
      data_form: string;
      /** Captured By */
      captured_by: string;
      /** Mark */
      mark: boolean;
      /** Temperature Units */
      temperature_units: string;
      /** Precipitation Units */
      precipitation_units: string;
      /** Cloud Height Units */
      cloud_height_units: string;
      /** Vis Units */
      vis_units: string;
      /** Data Source Timezone */
      data_source_timezone: number;
    };
    /** ObservationInitialQueryResponse */
    ObservationInitialQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObservationInitial"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** ObservationInitialResponse */
    ObservationInitialResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObservationInitial"][];
    };
    /** ObservationInitialWithChildren */
    ObservationInitialWithChildren: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by: number;
      /**
       * Obs Datetime
       * Format: date-time
       */
      obs_datetime: string;
      /** Qc Status */
      qc_status: number;
      /** Acquisition Type */
      acquisition_type: number;
      /** Obs Level */
      obs_level: string;
      /** Obsvalue */
      obsValue: string;
      /** Flag */
      flag: string;
      /** Period */
      period: number;
      /** Qc Type Log */
      qc_type_log: string;
      /** Data Form */
      data_form: string;
      /** Captured By */
      captured_by: string;
      /** Mark */
      mark: boolean;
      /** Temperature Units */
      temperature_units: string;
      /** Precipitation Units */
      precipitation_units: string;
      /** Cloud Height Units */
      cloud_height_units: string;
      /** Vis Units */
      vis_units: string;
      /** Data Source Timezone */
      data_source_timezone: number;
      obselement: components["schemas"]["ObsElement"];
      station: components["schemas"]["Station"];
    };
    /** ObservationInitialWithChildrenResponse */
    ObservationInitialWithChildrenResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["ObservationInitialWithChildren"][];
    };
    /** PaperArchive */
    PaperArchive: {
      /** Belongs To */
      belongs_to: string;
      /**
       * Form Datetime
       * Format: date-time
       */
      form_datetime: string;
      /** Image */
      image: string;
      /** Classified Into */
      classified_into: string;
    };
    /** PaperArchiveDefinition */
    PaperArchiveDefinition: {
      /** Form Id */
      form_id: string;
      /** Description */
      description: string;
    };
    /** PaperArchiveDefinitionQueryResponse */
    PaperArchiveDefinitionQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PaperArchiveDefinition"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** PaperArchiveDefinitionResponse */
    PaperArchiveDefinitionResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PaperArchiveDefinition"][];
    };
    /** PaperArchiveQueryResponse */
    PaperArchiveQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PaperArchive"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** PaperArchiveResponse */
    PaperArchiveResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PaperArchive"][];
    };
    /** PaperArchiveWithStationAndPaperArchiveDefinition */
    PaperArchiveWithStationAndPaperArchiveDefinition: {
      /** Belongs To */
      belongs_to: string;
      /**
       * Form Datetime
       * Format: date-time
       */
      form_datetime: string;
      /** Image */
      image: string;
      /** Classified Into */
      classified_into: string;
      station: components["schemas"]["Station"];
      paperarchivedefinition: components["schemas"]["PaperArchiveDefinition"];
    };
    /** PaperArchiveWithStationAndPaperArchiveDefinitionResponse */
    PaperArchiveWithStationAndPaperArchiveDefinitionResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PaperArchiveWithStationAndPaperArchiveDefinition"][];
    };
    /** PhysicalFeature */
    PhysicalFeature: {
      /** Associated With */
      associated_with: string;
      /** Begin Date */
      begin_date: string;
      /** End Date */
      end_date: string;
      /** Image */
      image: string;
      /** Description */
      description: string;
      /** Classified Into */
      classified_into: string;
    };
    /** PhysicalFeatureClass */
    PhysicalFeatureClass: {
      /** Feature Class */
      feature_class: string;
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
    };
    /** PhysicalFeatureClassQueryResponse */
    PhysicalFeatureClassQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PhysicalFeatureClass"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** PhysicalFeatureClassResponse */
    PhysicalFeatureClassResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PhysicalFeatureClass"][];
    };
    /** PhysicalFeatureClassWithStation */
    PhysicalFeatureClassWithStation: {
      /** Feature Class */
      feature_class: string;
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
      station: components["schemas"]["Station"];
    };
    /** PhysicalFeatureClassWithStationResponse */
    PhysicalFeatureClassWithStationResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PhysicalFeatureClassWithStation"][];
    };
    /** PhysicalFeatureQueryResponse */
    PhysicalFeatureQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PhysicalFeature"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** PhysicalFeatureResponse */
    PhysicalFeatureResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PhysicalFeature"][];
    };
    /** PhysicalFeatureWithStationAndPhysicalFeatureClass */
    PhysicalFeatureWithStationAndPhysicalFeatureClass: {
      /** Associated With */
      associated_with: string;
      /** Begin Date */
      begin_date: string;
      /** End Date */
      end_date: string;
      /** Image */
      image: string;
      /** Description */
      description: string;
      /** Classified Into */
      classified_into: string;
      station: components["schemas"]["Station"];
      physicalfeatureclas: components["schemas"]["PhysicalFeatureClass"];
    };
    /** PhysicalFeatureWithStationAndPhysicalFeatureClassResponse */
    PhysicalFeatureWithStationAndPhysicalFeatureClassResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["PhysicalFeatureWithStationAndPhysicalFeatureClass"][];
    };
    /** QCStatusDefinition */
    QCStatusDefinition: {
      /** Code */
      code: number;
      /** Description */
      description: string;
    };
    /** QCStatusDefinitionQueryResponse */
    QCStatusDefinitionQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["QCStatusDefinition"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** QCStatusDefinitionResponse */
    QCStatusDefinitionResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["QCStatusDefinition"][];
    };
    /** QCType */
    QCType: {
      /** Code */
      code: number;
      /** Description */
      description: string;
    };
    /** QCTypeQueryResponse */
    QCTypeQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["QCType"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** QCTypeResponse */
    QCTypeResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["QCType"][];
    };
    /** RegKey */
    RegKey: {
      /** Key Name */
      key_name: string;
      /** Key Value */
      key_value: string;
      /** Key Description */
      key_description: string;
    };
    /** RegKeyQueryResponse */
    RegKeyQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["RegKey"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** RegKeyResponse */
    RegKeyResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["RegKey"][];
    };
    /** Station */
    Station: {
      /** Station Id */
      station_id: string;
      /** Station Name */
      station_name: string;
      /** Wmoid */
      wmoid?: string;
      /** Icaoid */
      icaoid?: string;
      /** Latitude */
      latitude: number;
      /** Qualifier */
      qualifier?: string;
      /** Longitude */
      longitude: number;
      /** Elevation */
      elevation: string;
      /** Geolocation Method */
      geolocation_method?: string;
      /** Geolocation Accuracy */
      geolocation_accuracy?: number;
      /** Opening Datetime */
      opening_datetime?: string;
      /** Closing Datetime */
      closing_datetime: string;
      /** Country */
      country: string;
      /** Authority */
      authority?: string;
      /** Admin Region */
      admin_region?: string;
      /** Drainage Basin */
      drainage_basin?: string;
      /** Waca Selection */
      waca_selection: boolean;
      /** Cpt Selection */
      cpt_selection: boolean;
      /** Station Operational */
      station_operational: boolean;
    };
    /** StationElement */
    StationElement: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by?: number;
      /** Recorded With */
      recorded_with?: string;
      /** Instrument Code */
      instrument_code?: string;
      /** Scheduled For */
      scheduled_for?: string;
      /** Height */
      height?: number;
      /** Begin Date */
      begin_date?: string;
      /** End Date */
      end_date?: string;
    };
    /** StationElementQueryResponse */
    StationElementQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationElement"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** StationElementResponse */
    StationElementResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationElement"][];
    };
    /** StationElementWithChildren */
    StationElementWithChildren: {
      /** Recorded From */
      recorded_from: string;
      /** Described By */
      described_by?: number;
      /** Recorded With */
      recorded_with?: string;
      /** Instrument Code */
      instrument_code?: string;
      /** Scheduled For */
      scheduled_for?: string;
      /** Height */
      height?: number;
      /** Begin Date */
      begin_date?: string;
      /** End Date */
      end_date?: string;
      obs_element?: components["schemas"]["ObsElement"];
      station?: components["schemas"]["Station"];
      instrument?: components["schemas"]["Instrument"];
      obs_schedule_class?: components["schemas"]["ObsScheduleClass"];
    };
    /** StationElementWithChildrenResponse */
    StationElementWithChildrenResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationElementWithChildren"][];
    };
    /** StationLocationHistory */
    StationLocationHistory: {
      /** Belongs To */
      belongs_to: string;
      /**
       * Opening Datetime
       * Format: date-time
       */
      opening_datetime: string;
      /** Station Type */
      station_type: string;
      /** Geolocationmethod */
      geoLocationMethod: string;
      /** Geolocationaccuracy */
      geoLocationAccuracy: number;
      /**
       * Closing Datetime
       * Format: date-time
       */
      closing_datetime: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
      /** Elevation */
      elevation: number;
      /** Authority */
      authority: string;
      /** Admin Region */
      admin_region: string;
      /** Drainage Basin */
      drainage_basin: string;
    };
    /** StationLocationHistoryQueryResponse */
    StationLocationHistoryQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationLocationHistory"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** StationLocationHistoryResponse */
    StationLocationHistoryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationLocationHistory"][];
    };
    /** StationLocationHistoryWithStation */
    StationLocationHistoryWithStation: {
      /** Belongs To */
      belongs_to: string;
      /**
       * Opening Datetime
       * Format: date-time
       */
      opening_datetime: string;
      /** Station Type */
      station_type: string;
      /** Geolocationmethod */
      geoLocationMethod: string;
      /** Geolocationaccuracy */
      geoLocationAccuracy: number;
      /**
       * Closing Datetime
       * Format: date-time
       */
      closing_datetime: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
      /** Elevation */
      elevation: number;
      /** Authority */
      authority: string;
      /** Admin Region */
      admin_region: string;
      /** Drainage Basin */
      drainage_basin: string;
      station: components["schemas"]["Station"];
    };
    /** StationLocationHistoryWithStationResponse */
    StationLocationHistoryWithStationResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationLocationHistoryWithStation"][];
    };
    /** StationQualifier */
    StationQualifier: {
      /** Qualifier */
      qualifier: string;
      /** Qualifier Begin Date */
      qualifier_begin_date: string;
      /** Qualifier End Date */
      qualifier_end_date: string;
      /** Belongs To */
      belongs_to: string;
      /** Station Timezone */
      station_timezone: number;
      /** Station Network Type */
      station_network_type: string;
    };
    /** StationQualifierQueryResponse */
    StationQualifierQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationQualifier"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** StationQualifierResponse */
    StationQualifierResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationQualifier"][];
    };
    /** StationQualifierWithStation */
    StationQualifierWithStation: {
      /** Qualifier */
      qualifier: string;
      /** Qualifier Begin Date */
      qualifier_begin_date: string;
      /** Qualifier End Date */
      qualifier_end_date: string;
      /** Belongs To */
      belongs_to: string;
      /** Station Timezone */
      station_timezone: number;
      /** Station Network Type */
      station_network_type: string;
      station: components["schemas"]["Station"];
    };
    /** StationQualifierWithStationResponse */
    StationQualifierWithStationResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["StationQualifierWithStation"][];
    };
    /** StationQueryResponse */
    StationQueryResponse: {
      /** Result */
      result: components["schemas"]["Station"][];
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** StationResponse */
    StationResponse: {
      /** Result */
      result: components["schemas"]["Station"][];
      /** Message */
      message: string;
      /** Status */
      status: string;
    };
    /** SynopFeature */
    SynopFeature: {
      /** Abbreviation */
      abbreviation: string;
      /** Description */
      description: string;
    };
    /** SynopFeatureQueryResponse */
    SynopFeatureQueryResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["SynopFeature"][];
      /** Limit */
      limit: number;
      /** Page */
      page: number;
      /** Pages */
      pages: number;
    };
    /** SynopFeatureResponse */
    SynopFeatureResponse: {
      /** Message */
      message: string;
      /** Status */
      status: string;
      /** Result */
      result: components["schemas"]["SynopFeature"][];
    };
    /** UpdateAcquisitionType */
    UpdateAcquisitionType: {
      /** Description */
      description: string;
    };
    /** UpdateDataForm */
    UpdateDataForm: {
      /** Order Num */
      order_num: number;
      /** Table Name */
      table_name: string;
      /** Description */
      description: string;
      /** Selected */
      selected: boolean;
      /** Val Start Position */
      val_start_position: number;
      /** Val End Position */
      val_end_position: number;
      /** Elem Code Location */
      elem_code_location: string;
      /** Sequencer */
      sequencer: string;
      /** Entry Mode */
      entry_mode: boolean;
    };
    /** UpdateFaultResolution */
    UpdateFaultResolution: {
      /** Resolved By */
      resolved_by: string;
      /** Remarks */
      remarks: string;
    };
    /** UpdateFeatureGeographicalPosition */
    UpdateFeatureGeographicalPosition: {
      /** Observed On */
      observed_on: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
    };
    /** UpdateFlag */
    UpdateFlag: {
      /** Num Symbol */
      num_symbol: number;
      /** Description */
      description: string;
    };
    /** UpdateInstrument */
    UpdateInstrument: {
      /** Instrument Name */
      instrument_name: string;
      /** Serial Number */
      serial_number: string;
      /** Abbreviation */
      abbreviation: string;
      /** Model */
      model: string;
      /** Manufacturer */
      manufacturer: string;
      /** Instrument Uncertainty */
      instrument_uncertainty: number;
      /** Installation Datetime */
      installation_datetime: string;
      /** Uninstallation Datetime */
      uninstallation_datetime: string;
      /** Height */
      height: string;
      /** Instrument Picture */
      instrument_picture: string;
      /** Installed At */
      installed_at: string;
    };
    /** UpdateInstrumentFaultReport */
    UpdateInstrumentFaultReport: {
      /** Refers To */
      refers_to: string;
      /** Report Datetime */
      report_datetime: string;
      /** Fault Description */
      fault_description: string;
      /** Reported By */
      reported_by: string;
      /** Received Datetime */
      received_datetime: string;
      /** Received By */
      received_by: string;
      /** Reported From */
      reported_from: string;
    };
    /** UpdateInstrumentInspection */
    UpdateInstrumentInspection: {
      /** Performed By */
      performed_by: string;
      /** Status */
      status: string;
      /** Remarks */
      remarks: string;
      /** Performed At */
      performed_at: string;
    };
    /** UpdateObsElement */
    UpdateObsElement: {
      /** Abbreviation */
      abbreviation: string;
      /** Element Name */
      element_name: string;
      /** Description */
      description: string;
      /** Element Scale */
      element_scale: number;
      /** Upper Limit */
      upper_limit: string;
      /** Lower Limit */
      lower_limit: string;
      /** Units */
      units: string;
      /** Element Type */
      element_type: string;
      /** Qc Total Required */
      qc_total_required: number;
      /** Selected */
      selected: boolean;
    };
    /** UpdateObsScheduleClass */
    UpdateObsScheduleClass: {
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
    };
    /** UpdateObservationFinal */
    UpdateObservationFinal: {
      /** Qc Status */
      qc_status: number;
      /** Acquisition Type */
      acquisition_type: number;
      /** Obs Level */
      obs_level: string;
      /** Obs Value */
      obs_value: string;
      /** Flag */
      flag: string;
      /** Period */
      period?: number;
      /** Qc Type Log */
      qc_type_log?: string;
      /** Data Form */
      data_form?: string;
      /** Captured By */
      captured_by?: string;
      /** Mark */
      mark?: boolean;
      /** Temperature Units */
      temperature_units?: string;
      /** Precipitation Units */
      precipitation_units?: string;
      /** Cloud Height Units */
      cloud_height_units?: string;
      /** Vis Units */
      vis_units?: string;
      /** Data Source Timezone */
      data_source_timezone: number;
    };
    /** UpdateObservationInitial */
    UpdateObservationInitial: {
      /** Obs Level */
      obs_level: string;
      /** Obsvalue */
      obsValue: string;
      /** Flag */
      flag: string;
      /** Period */
      period: number;
      /** Qc Type Log */
      qc_type_log: string;
      /** Data Form */
      data_form: string;
      /** Captured By */
      captured_by: string;
      /** Mark */
      mark: boolean;
      /** Temperature Units */
      temperature_units: string;
      /** Precipitation Units */
      precipitation_units: string;
      /** Cloud Height Units */
      cloud_height_units: string;
      /** Vis Units */
      vis_units: string;
      /** Data Source Timezone */
      data_source_timezone: number;
    };
    /** UpdatePaperArchive */
    UpdatePaperArchive: {
      /** Image */
      image: string;
    };
    /** UpdatePaperArchiveDefinition */
    UpdatePaperArchiveDefinition: {
      /** Description */
      description: string;
    };
    /** UpdatePhysicalFeature */
    UpdatePhysicalFeature: {
      /** End Date */
      end_date: string;
      /** Image */
      image: string;
    };
    /** UpdatePhysicalFeatureClass */
    UpdatePhysicalFeatureClass: {
      /** Description */
      description: string;
      /** Refers To */
      refers_to: string;
    };
    /** UpdateQCStatusDefinition */
    UpdateQCStatusDefinition: {
      /** Description */
      description: string;
    };
    /** UpdateQCType */
    UpdateQCType: {
      /** Description */
      description: string;
    };
    /** UpdateRegKey */
    UpdateRegKey: {
      /** Key Value */
      key_value: string;
      /** Key Description */
      key_description: string;
    };
    /** UpdateStation */
    UpdateStation: {
      /** Station Name */
      station_name: string;
      /** Wmoid */
      wmoid?: string;
      /** Icaoid */
      icaoid?: string;
      /** Latitude */
      latitude: number;
      /** Qualifier */
      qualifier?: string;
      /** Longitude */
      longitude: number;
      /** Elevation */
      elevation: string;
      /** Geolocation Method */
      geolocation_method?: string;
      /** Geolocation Accuracy */
      geolocation_accuracy?: number;
      /** Opening Datetime */
      opening_datetime?: string;
      /** Closing Datetime */
      closing_datetime: string;
      /** Country */
      country: string;
      /** Authority */
      authority?: string;
      /** Admin Region */
      admin_region?: string;
      /** Drainage Basin */
      drainage_basin?: string;
      /** Waca Selection */
      waca_selection: boolean;
      /** Cpt Selection */
      cpt_selection: boolean;
      /** Station Operational */
      station_operational: boolean;
    };
    /** UpdateStationElement */
    UpdateStationElement: {
      /** Instrument Code */
      instrument_code?: string;
      /** Scheduled For */
      scheduled_for?: string;
      /** Height */
      height?: number;
      /** End Date */
      end_date?: string;
    };
    /** UpdateStationLocationHistory */
    UpdateStationLocationHistory: {
      /** Station Type */
      station_type: string;
      /** Geolocationmethod */
      geoLocationMethod: string;
      /** Geolocationaccuracy */
      geoLocationAccuracy: number;
      /** Closing Datetime */
      closing_datetime: string;
      /** Latitude */
      latitude: number;
      /** Longitude */
      longitude: number;
      /** Elevation */
      elevation: number;
      /** Authority */
      authority: string;
      /** Admin Region */
      admin_region: string;
      /** Drainage Basin */
      drainage_basin: string;
    };
    /** UpdateStationQualifier */
    UpdateStationQualifier: {
      /** Station Timezone */
      station_timezone: number;
      /** Station Network Type */
      station_network_type: string;
    };
    /** UpdateSynopFeature */
    UpdateSynopFeature: {
      /** Description */
      description: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: string[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
}

export interface operations {
  get_statistics_for_all_climsoft_tables_v1_statistics_get: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  upload_image_v1_file_upload_image_post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": Partial<
            components["schemas"]["FileUploadedToDiskResponse"]
          > &
            Partial<components["schemas"]["FileUploadedToS3Response"]>;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_image_v1_file_upload_image_post"];
      };
    };
  };
  get_s3_object_v1_s3_image__object_key__get: {
    parameters: {
      path: {
        object_key: unknown;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_climsoft_users_v1_climsoft_users__get: {
    parameters: {
      query: {
        username?: string;
        role?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ClimsoftUserQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_climsoft_user_v1_climsoft_users__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ClimsoftUserResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateClimsoftUser"];
      };
    };
  };
  get_climsoft_user_by_username_v1_climsoft_users__username__get: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ClimsoftUserResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  delete_climsoft_user_v1_climsoft_users__username__delete: {
    parameters: {
      path: {
        username: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ClimsoftUserResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_climsoft_user_v1_climsoft_users__username__update_role__role__put: {
    parameters: {
      path: {
        username: string;
        role: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ClimsoftUserResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_acquisition_types_v1_acquisition_types__get: {
    parameters: {
      query: {
        code?: string;
        description?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AcquisitionTypeQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_acquisition_type_v1_acquisition_types__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AcquisitionTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAcquisitionType"];
      };
    };
  };
  get_acquisition_type_by_id_v1_acquisition_types__code__get: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AcquisitionTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_acquisition_type_v1_acquisition_types__code__put: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AcquisitionTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateAcquisitionType"];
      };
    };
  };
  delete_acquisition_type_v1_acquisition_types__code__delete: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["AcquisitionTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_data_forms_v1_data_forms__get: {
    parameters: {
      query: {
        order_num?: number;
        table_name?: string;
        form_name?: string;
        description?: string;
        selected?: boolean;
        val_start_position?: number;
        val_end_position?: number;
        elem_code_location?: string;
        sequencer?: string;
        entry_mode?: boolean;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DataFormQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_data_form_v1_data_forms__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DataFormResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDataForm"];
      };
    };
  };
  get_data_form_by_id_v1_data_forms__form_name__get: {
    parameters: {
      path: {
        form_name: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DataFormResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_data_form_v1_data_forms__form_name__put: {
    parameters: {
      path: {
        form_name: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DataFormResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateDataForm"];
      };
    };
  };
  delete_data_form_v1_data_forms__form_name__delete: {
    parameters: {
      path: {
        form_name: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DataFormResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_instrument_inspection_v1_fault_resolutions__get: {
    parameters: {
      query: {
        resolved_datetime?: string;
        associated_with?: string;
        resolved_by?: string;
        remarks?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FaultResolutionQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_instrument_inspection_v1_fault_resolutions__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FaultResolutionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateFaultResolution"];
      };
    };
  };
  get_instrument_inspection_by_id_v1_fault_resolutions__resolved_datetime___associated_with__get: {
    parameters: {
      path: {
        resolved_datetime: string;
        associated_with: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FaultResolutionWithInstrumentFaultReportResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_instrument_inspection_v1_fault_resolutions__resolved_datetime___associated_with__put: {
    parameters: {
      path: {
        resolved_datetime: string;
        associated_with: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FaultResolutionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateFaultResolution"];
      };
    };
  };
  delete_instrument_inspection_v1_fault_resolutions__resolved_datetime___associated_with__delete: {
    parameters: {
      path: {
        resolved_datetime: string;
        associated_with: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FaultResolutionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_feature_geographical_positions_v1_feature_geographical_positions__get: {
    parameters: {
      query: {
        belongs_to?: string;
        observed_on?: string;
        latitude?: number;
        longitude?: number;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FeatureGeographicalPositionQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_feature_geographical_position_v1_feature_geographical_positions__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FeatureGeographicalPositionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateFeatureGeographicalPosition"];
      };
    };
  };
  get_feature_geographical_position_by_id_v1_feature_geographical_positions__belongs_to__get: {
    parameters: {
      path: {
        belongs_to: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FeatureGeographicalPositionWithSynopFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_feature_geographical_position_v1_feature_geographical_positions__belongs_to__put: {
    parameters: {
      path: {
        belongs_to: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FeatureGeographicalPositionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateFeatureGeographicalPosition"];
      };
    };
  };
  delete_feature_geographical_position_v1_feature_geographical_positions__belongs_to__delete: {
    parameters: {
      path: {
        belongs_to: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FeatureGeographicalPositionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_flags_v1_flags__get: {
    parameters: {
      query: {
        character_symbol?: string;
        num_symbol?: number;
        description?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlagQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_flag_v1_flags__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlagResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateFlag"];
      };
    };
  };
  get_flag_by_id_v1_flags__character_symbol__get: {
    parameters: {
      path: {
        character_symbol: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlagResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_flag_v1_flags__character_symbol__put: {
    parameters: {
      path: {
        character_symbol: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlagResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateFlag"];
      };
    };
  };
  delete_flag_v1_flags__character_symbol__delete: {
    parameters: {
      path: {
        character_symbol: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["FlagResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_instruments_v1_instruments__get: {
    parameters: {
      query: {
        instrument_id?: string;
        instrument_name?: string;
        serial_number?: string;
        abbreviation?: string;
        model?: string;
        manufacturer?: string;
        instrument_uncertainty?: number;
        installation_datetime?: string;
        uninstallation_datetime?: string;
        height?: string;
        station_id?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_instrument_v1_instruments__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateInstrument"];
      };
    };
  };
  get_instrument_by_id_v1_instruments__instrument_id__get: {
    parameters: {
      path: {
        instrument_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentWithStationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_instrument_v1_instruments__instrument_id__put: {
    parameters: {
      path: {
        instrument_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateInstrument"];
      };
    };
  };
  delete_instrument_v1_instruments__instrument_id__delete: {
    parameters: {
      path: {
        instrument_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_instrument_fault_report_v1_instrument_fault_reports__get: {
    parameters: {
      query: {
        refers_to?: string;
        report_id?: string;
        report_datetime?: string;
        fault_description?: number;
        reported_by?: string;
        received_datetime?: string;
        received_by?: number;
        reported_from?: number;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentFaultReportQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_instrument_fault_report_v1_instrument_fault_reports__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentFaultReportResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateInstrumentFaultReport"];
      };
    };
  };
  get_instrument_fault_report_by_id_v1_instrument_fault_reports__report_id__get: {
    parameters: {
      path: {
        report_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentFaultReportWithStationAndInstrumentResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_instrument_fault_report_v1_instrument_fault_reports__report_id__put: {
    parameters: {
      path: {
        report_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentFaultReportResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateInstrumentFaultReport"];
      };
    };
  };
  delete_instrument_fault_report_v1_instrument_fault_reports__report_id__delete: {
    parameters: {
      path: {
        report_id: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentFaultReportResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_instrument_inspection_v1_instrument_inspections__get: {
    parameters: {
      query: {
        performed_on?: string;
        inspection_datetime?: string;
        performed_by?: string;
        status?: string;
        remarks?: string;
        performed_at?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentInspectionQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_instrument_inspection_v1_instrument_inspections__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentInspectionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateInstrumentInspection"];
      };
    };
  };
  get_instrument_inspection_by_id_v1_instrument_inspections__performed_on___inspection_datetime__get: {
    parameters: {
      path: {
        performed_on: string;
        inspection_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentInspectionWithStationAndInstrumentResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_instrument_inspection_v1_instrument_inspections__performed_on___inspection_datetime__put: {
    parameters: {
      path: {
        performed_on: string;
        inspection_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentInspectionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateInstrumentInspection"];
      };
    };
  };
  delete_instrument_inspection_v1_instrument_inspections__performed_on___inspection_datetime__delete: {
    parameters: {
      path: {
        performed_on: string;
        inspection_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["InstrumentInspectionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_obselements_v1_obselements__get: {
    parameters: {
      query: {
        element_id?: string;
        element_name?: string;
        abbreviation?: string;
        description?: string;
        element_scale?: number;
        upper_limit?: number;
        lower_limit?: string;
        units?: string;
        element_type?: string;
        qc_total_required?: number;
        selected?: boolean;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsElementQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_obs_element_v1_obselements__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsElementResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateObsElement"];
      };
    };
  };
  get_obs_element_by_id_v1_obselements__element_id__get: {
    parameters: {
      path: {
        element_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsElementResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_obs_element_v1_obselements__element_id__put: {
    parameters: {
      path: {
        element_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsElementResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateObsElement"];
      };
    };
  };
  delete_obs_element_v1_obselements__element_id__delete: {
    parameters: {
      path: {
        element_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsElementResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_observation_finals_v1_observation_finals__get: {
    parameters: {
      query: {
        recorded_from?: string;
        described_by?: number;
        obs_datetime?: string;
        qc_status?: number;
        acquisition_type?: number;
        obs_level?: number;
        obs_value?: number;
        flag?: string;
        period?: number;
        qc_type_log?: string;
        data_form?: string;
        captured_by?: string;
        mark?: boolean;
        temperature_units?: string;
        precipitation_units?: string;
        cloud_height_units?: string;
        vis_units?: string;
        data_source_timezone?: number;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationFinalQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_observation_final_v1_observation_finals__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationFinalResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateObservationFinal"];
      };
    };
  };
  get_observation_final_by_id_v1_observation_finals__recorded_from___described_by___obs_datetime__get: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        obs_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationFinalWithChildrenResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_observation_final_v1_observation_finals__recorded_from___described_by___obs_datetime__put: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        obs_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationFinalResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateObservationFinal"];
      };
    };
  };
  delete_observation_final_v1_observation_finals__recorded_from___described_by___obs_datetime__delete: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        obs_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationFinalResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_observation_initials_v1_observation_initials__get: {
    parameters: {
      query: {
        recorded_from?: string;
        described_by?: number;
        obs_datetime?: string;
        qc_status?: number;
        acquisition_type?: number;
        obs_level?: number;
        obs_value?: number;
        flag?: string;
        period?: number;
        qc_type_log?: string;
        data_form?: string;
        captured_by?: string;
        mark?: boolean;
        temperature_units?: string;
        precipitation_units?: string;
        cloud_height_units?: string;
        vis_units?: string;
        data_source_timezone?: number;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationInitialQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_observation_initial_v1_observation_initials__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationInitialResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateObservationInitial"];
      };
    };
  };
  get_observation_initial_by_id_v1_observation_initials__recorded_from___described_by___obs_datetime___qc_status___acquisition_type__get: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        obs_datetime: string;
        qc_status: number;
        acquisition_type: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationInitialWithChildrenResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_observation_initial_v1_observation_initials__recorded_from___described_by___obs_datetime___qc_status___acquisition_type__put: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        obs_datetime: string;
        qc_status: number;
        acquisition_type: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationInitialResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateObservationInitial"];
      };
    };
  };
  delete_observation_initial_v1_observation_initials__recorded_from___described_by___obs_datetime___qc_status___acquisition_type__delete: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        obs_datetime: string;
        qc_status: number;
        acquisition_type: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObservationInitialResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_obs_schedule_class_v1_obs_schedule_class__get: {
    parameters: {
      query: {
        schedule_class?: string;
        description?: string;
        refers_to?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsScheduleClassQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_instrument_v1_obs_schedule_class__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsScheduleClassResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateObsScheduleClass"];
      };
    };
  };
  get_instrument_by_id_v1_obs_schedule_class__schedule_class__get: {
    parameters: {
      path: {
        schedule_class: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsScheduleClassWithStationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_instrument_v1_obs_schedule_class__schedule_class__put: {
    parameters: {
      path: {
        schedule_class: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsScheduleClassResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateObsScheduleClass"];
      };
    };
  };
  delete_instrument_v1_obs_schedule_class__schedule_class__delete: {
    parameters: {
      path: {
        schedule_class: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ObsScheduleClassResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_paper_archives_v1_paper_archives__get: {
    parameters: {
      query: {
        belongs_to?: string;
        form_datetime?: string;
        image?: string;
        classified_into?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_paper_archive_v1_paper_archives__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePaperArchive"];
      };
    };
  };
  get_paper_archive_by_id_v1_paper_archives__belongs_to___form_datetime___classified_into__get: {
    parameters: {
      path: {
        belongs_to: string;
        form_datetime: string;
        classified_into: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveWithStationAndPaperArchiveDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_paper_archive_v1_paper_archives__belongs_to___form_datetime___classified_into__put: {
    parameters: {
      path: {
        belongs_to: string;
        form_datetime: string;
        classified_into: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePaperArchive"];
      };
    };
  };
  delete_paper_archive_v1_paper_archives__belongs_to___form_datetime___classified_into__delete: {
    parameters: {
      path: {
        belongs_to: string;
        form_datetime: string;
        classified_into: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_paper_archive_definitions_v1_paper_archive_definitions__get: {
    parameters: {
      query: {
        form_id?: string;
        description?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveDefinitionQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_paper_archive_definition_v1_paper_archive_definitions__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePaperArchiveDefinition"];
      };
    };
  };
  get_paper_archive_definition_by_id_v1_paper_archive_definitions__form_id__get: {
    parameters: {
      path: {
        form_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_paper_archive_definition_v1_paper_archive_definitions__form_id__put: {
    parameters: {
      path: {
        form_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePaperArchiveDefinition"];
      };
    };
  };
  delete_paper_archive_definition_v1_paper_archive_definitions__form_id__delete: {
    parameters: {
      path: {
        form_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PaperArchiveDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_physical_feature_v1_physical_features__get: {
    parameters: {
      query: {
        associated_with?: string;
        begin_date?: string;
        end_date?: string;
        image?: string;
        description?: string;
        classified_into?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_physical_feature_v1_physical_features__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePhysicalFeature"];
      };
    };
  };
  get_physical_feature_by_id_v1_physical_features__associated_with___begin_date___classified_into___description__get: {
    parameters: {
      path: {
        associated_with: string;
        begin_date: string;
        classified_into: string;
        description: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureWithStationAndPhysicalFeatureClassResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_physical_feature_v1_physical_features__associated_with___begin_date___classified_into___description__put: {
    parameters: {
      path: {
        associated_with: string;
        begin_date: string;
        classified_into: string;
        description: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePhysicalFeature"];
      };
    };
  };
  delete_physical_feature_v1_physical_features__associated_with___begin_date___classified_into___description__delete: {
    parameters: {
      path: {
        associated_with: string;
        begin_date: string;
        classified_into: string;
        description: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_physical_feature_class_v1_physical_feature_class__get: {
    parameters: {
      query: {
        feature_class?: string;
        description?: string;
        refers_to?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureClassQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_physical_feature_class_v1_physical_feature_class__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureClassResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePhysicalFeatureClass"];
      };
    };
  };
  get_physical_feature_class_by_id_v1_physical_feature_class__feature_class__get: {
    parameters: {
      path: {
        feature_class: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureClassWithStationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_physical_feature_class_v1_physical_feature_class__feature_class__put: {
    parameters: {
      path: {
        feature_class: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureClassResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePhysicalFeatureClass"];
      };
    };
  };
  delete_physical_feature_class_v1_physical_feature_class__feature_class__delete: {
    parameters: {
      path: {
        feature_class: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["PhysicalFeatureClassResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_qc_status_definitions_v1_qc_status_definitions__get: {
    parameters: {
      query: {
        code?: string;
        description?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCStatusDefinitionQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_qc_status_definition_v1_qc_status_definitions__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCStatusDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateQCStatusDefinition"];
      };
    };
  };
  get_qc_status_definition_by_id_v1_qc_status_definitions__code__get: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCStatusDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_qc_status_definition_v1_qc_status_definitions__code__put: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCStatusDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateQCStatusDefinition"];
      };
    };
  };
  delete_qc_status_definition_v1_qc_status_definitions__code__delete: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCStatusDefinitionResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_qc_types_v1_qc_types__get: {
    parameters: {
      query: {
        code?: string;
        description?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCTypeQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_qc_type_v1_qc_types__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateQCType"];
      };
    };
  };
  get_qc_type_by_id_v1_qc_types__code__get: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_qc_type_v1_qc_types__code__put: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateQCType"];
      };
    };
  };
  delete_qc_type_v1_qc_types__code__delete: {
    parameters: {
      path: {
        code: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["QCTypeResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_reg_keys_v1_reg_keys__get: {
    parameters: {
      query: {
        key_name?: string;
        key_value?: string;
        key_description?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["RegKeyQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_reg_key_v1_reg_keys__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["RegKeyResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateRegKey"];
      };
    };
  };
  get_reg_key_by_id_v1_reg_keys__key_name__get: {
    parameters: {
      path: {
        key_name: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["RegKeyResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_reg_key_v1_reg_keys__key_name__put: {
    parameters: {
      path: {
        key_name: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["RegKeyResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateRegKey"];
      };
    };
  };
  delete_reg_key_v1_reg_keys__key_name__delete: {
    parameters: {
      path: {
        key_name: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["RegKeyResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_stations_v1_stations__get: {
    parameters: {
      query: {
        station_id?: string;
        station_name?: string;
        wmoid?: string;
        icaoid?: string;
        latitude?: number;
        longitude?: number;
        qualifier?: string;
        elevation?: string;
        geolocation_method?: string;
        geolocation_accuracy?: string;
        opening_datetime?: string;
        closing_datetime?: string;
        country?: string;
        authority?: string;
        admin_region?: string;
        drainage_basin?: string;
        waca_selection?: boolean;
        cpt_selection?: boolean;
        station_operational?: boolean;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_station_v1_stations__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateStation"];
      };
    };
  };
  get_station_by_id_v1_stations__station_id__get: {
    parameters: {
      path: {
        station_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_station_v1_stations__station_id__put: {
    parameters: {
      path: {
        station_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateStation"];
      };
    };
  };
  delete_station_v1_stations__station_id__delete: {
    parameters: {
      path: {
        station_id: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_station_elements_v1_station_elements__get: {
    parameters: {
      query: {
        recorded_from?: string;
        described_by?: number;
        recorded_with?: string;
        instrument_code?: string;
        scheduled_for?: string;
        height?: number;
        begin_date?: number;
        end_date?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationElementQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_station_element_v1_station_elements__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationElementResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateStationElement"];
      };
    };
  };
  get_station_element_by_id_v1_station_elements__recorded_from___described_by___recorded_with___begin_date__get: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        recorded_with: string;
        begin_date: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationElementWithChildrenResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_station_element_v1_station_elements__recorded_from___described_by___recorded_with___begin_date__put: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        recorded_with: string;
        begin_date: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationElementResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateStationElement"];
      };
    };
  };
  delete_station_element_v1_station_elements__recorded_from___described_by___recorded_with___begin_date__delete: {
    parameters: {
      path: {
        recorded_from: string;
        described_by: number;
        recorded_with: string;
        begin_date: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationElementResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_station_location_history_v1_station_location_histories__get: {
    parameters: {
      query: {
        belongs_to?: string;
        station_type?: string;
        geolocation_method?: string;
        geolocation_accuracy?: number;
        opening_datetime?: string;
        closing_datetime?: string;
        latitude?: number;
        longitude?: number;
        elevation?: number;
        authority?: string;
        admin_region?: string;
        drainage_basin?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationLocationHistoryQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_station_location_history_v1_station_location_histories__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationLocationHistoryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateStationLocationHistory"];
      };
    };
  };
  get_station_location_history_by_id_v1_station_location_histories__belongs_to___opening_datetime__get: {
    parameters: {
      path: {
        belongs_to: string;
        opening_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationLocationHistoryWithStationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_station_location_history_v1_station_location_histories__belongs_to___opening_datetime__put: {
    parameters: {
      path: {
        belongs_to: string;
        opening_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationLocationHistoryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateStationLocationHistory"];
      };
    };
  };
  delete_station_location_history_v1_station_location_histories__belongs_to___opening_datetime__delete: {
    parameters: {
      path: {
        belongs_to: string;
        opening_datetime: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationLocationHistoryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_station_qualifier_v1_station_qualifiers__get: {
    parameters: {
      query: {
        qualifier?: string;
        qualifier_begin_date?: string;
        qualifier_end_date?: string;
        station_timezone?: number;
        station_network_type?: string;
        belongs_to?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationQualifierQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_station_qualifier_v1_station_qualifiers__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationQualifierResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateStationQualifier"];
      };
    };
  };
  get_station_qualifier_by_id_v1_station_qualifiers__qualifier___qualifier_begin_date___qualifier_end_date___belongs_to__get: {
    parameters: {
      path: {
        qualifier: string;
        qualifier_begin_date: string;
        qualifier_end_date: string;
        belongs_to: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationQualifierWithStationResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_station_qualifier_v1_station_qualifiers__qualifier___qualifier_begin_date___qualifier_end_date___belongs_to__put: {
    parameters: {
      path: {
        qualifier: string;
        qualifier_begin_date: string;
        qualifier_end_date: string;
        belongs_to: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationQualifierResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateStationQualifier"];
      };
    };
  };
  delete_station_qualifier_v1_station_qualifiers__qualifier___qualifier_begin_date___qualifier_end_date___belongs_to__delete: {
    parameters: {
      path: {
        qualifier: string;
        qualifier_begin_date: string;
        qualifier_end_date: string;
        belongs_to: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["StationQualifierResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_qc_types_v1_synop_features__get: {
    parameters: {
      query: {
        abbreviation?: string;
        description?: string;
        limit?: number;
        offset?: number;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SynopFeatureQueryResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  create_qc_type_v1_synop_features__post: {
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SynopFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateSynopFeature"];
      };
    };
  };
  get_qc_type_by_id_v1_synop_features__abbreviation__get: {
    parameters: {
      path: {
        abbreviation: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SynopFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  update_qc_type_v1_synop_features__abbreviation__put: {
    parameters: {
      path: {
        abbreviation: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SynopFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateSynopFeature"];
      };
    };
  };
  delete_qc_type_v1_synop_features__abbreviation__delete: {
    parameters: {
      path: {
        abbreviation: string;
      };
    };
    responses: {
      /** Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["SynopFeatureResponse"];
        };
      };
      /** Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}

export interface external {}
