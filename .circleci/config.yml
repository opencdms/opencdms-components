version: 2.1
######################################################################################################
# Pre-Requisites
#
# In order to use these scripts various env variables need to be set on CircleCI
# See `packages/documentation/docs/Deployment/circle-ci.md` for more information
#
# For general config info see: https://circleci.com/docs/2.0/configuration-reference
######################################################################################################

######################################################################################################
#  Orbs - preconfigured environments for running specific jobs
######################################################################################################

orbs:
  # Used to install browser into cimg/node
  browser-tools: circleci/browser-tools@1.1.0
######################################################################################################
#  Aliases - code snippets that can be included inline in any other markup
######################################################################################################
aliases:
  # use a base image running node v16 with chrome/firefox browsers preinstalled
  - &base_image
    - image: cimg/node:16.14-browsers

  # restore/install/save can all be done with a single circle-ci orb, but less flexible and breaks intellisense
  - &restore_yarn_cache
    restore_cache:
      name: Restore yarn cache
      keys:
        # https://circleci.com/docs/2.0/caching/
        # https://circleci.com/docs/2.0/yarn/
        # when lock file changes, use increasingly general patterns to restore cache (also need to change `save_cache` path)
        # NOTE - if changing base image or received cache permission denied may need to bump version v3->v4 or similar (clears after 15d)
        - yarn-packages-v1-{{ checksum "yarn.lock" }}
        - yarn-packages-v1-

  - &install_packages
    run:
      name: Install Packages
      command: yarn install --immutable
      environment:
        YARN_CACHE_FOLDER: /tmp/.yarn/cache

    # Example debugging commands for use troubleshooting caching (du will exit with status 141)
  - &save_yarn_cache
    save_cache:
      # note - if moving to workspaces include paths: https://discuss.circleci.com/t/yarn-cached-install-slow/34823/2
      # depending on whether enableGlobalCache is set to true or not (and windows/linux) these paths may vary
      paths:
        - /tmp/.yarn/cache
      key: yarn-packages-v1-{{ checksum "yarn.lock" }}

  - &filter_only_main
    filters:
      branches:
        only:
          - main

######################################################################################################
#  Commands - Reusable collections of steps
######################################################################################################
commands:
  setup_repo:
    description: checkout repo and install packages
    steps:
      - checkout
      - *restore_yarn_cache
      - *install_packages
      - *save_yarn_cache

######################################################################################################
#  Jobs - Independently specified lists of tasks and environments for execution
######################################################################################################
jobs:
  test:
    docker: *base_image
    resource_class: medium
    steps:
      - setup_repo
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: yarn test --watch=false
        # environment:
        # CHROME_BIN: /usr/local/bin/google-chrome
  build:
    docker: *base_image
    resource_class: medium
    steps:
      - setup_repo
      - run:
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist
  deploy_vercel:
    docker: *base_image
    resource_class: small
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run:
          name: Populate Vercel Credentials
          command: |
            mkdir .vercel
            echo '{"orgId":"$VERCEL_ORG_ID","projectId":"$VERCEL_PROJECT_ID"}' > .vercel/project.json
      - run:
          name: Deploy to Vercel production
          command: |
            sudo npm i -g vercel
            vercel --prod --token $VERCEL_TOKEN

######################################################################################################
#  Workflows - Collections of jobs to define overall processes
######################################################################################################
workflows:
  version: 2
  main_workflow:
    # by default jobs will run concurrently, use requires to run sequentially
    jobs:
      #---------------------- Test ----------------------
      - test:
          name: Test
      #---------------------- Build ----------------------
      - build:
          name: Build
      #----------------------  Deploy ----------------------
      - deploy_vercel:
          name: Deploy to Vercel
          requires:
            - Test
            - Build
          <<: *filter_only_main
